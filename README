
                             @-.
                           _  )\\  _
                          / \/ | \/ \
                         @/`|/\/\/|`\@
                            /~~~~~\
                           |  ^ ^  |
                           |   .   |
                           | (\_/) |
                        .-"-\ \_/ /-"-.
                       / .-. \___/ .-. \
                      @/` /.-.   .-.\ `\@
                         @`   \ /   `@
                               @

                             yalmc

                       / Yet Another LMC /

    WIP to bring running LMC code in parallel to the Mac and
    Windows OS. Aims to be (not bug-for-bug) compatible with
    the OG LMC simulator[1]. No UI, but has pretty good HTML
    output (subjective).

    Usage:
    ~~~~~~

        $ yalmc -h
        $ yalmc -filename=PATH_TO_CODE <input1> <input2> <input3> ...
        $ yalmc -debug -filename=<x> ...
        $ yalmc -batch -filename=folder/test_cases.txt -workers=4 > f.html
        $ yalmc -heatmap -filename=<x> ... > f.html

    Screenshots:
    ~~~~~~~~~~~~

        Batch Processing: https://github.com/eugene-eeo/yalmc/raw/master/screenshots/batch.png
        Debug (WIP): https://github.com/eugene-eeo/yalmc/raw/master/screenshots/debug.png
        Heatmap: https://raw.githubusercontent.com/eugene-eeo/yalmc/master/screenshots/heatmap.png

    Roadmap:
    ~~~~~~~~

        [x] Less pedantic parsing phase[2]
        [x] Code compilation and generation
        [x] Basic execution of code in VM
        [x] Batch processing
        [x] Friendlier output
        [x] Mailbox heatmap
        [ ] Nicer -debug output
        [ ] Actually test this


    [1]: https://community.dur.ac.uk/m.j.r.bordewich/LMC.html
    [2]: the yalmc compiler assumes that labels, instructions,
         and address components are always separated by tabs;
         whereas this is not enforced in the OG LMC, making
         this assumption makes everything much easier (when
         parsing/generating code).

